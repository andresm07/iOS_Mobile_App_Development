//
//  CategoriesInteractor.swift
//  CleanSwiftExample
//
//  Created by admin on 4/25/20.
//  Copyright (c) 2020 admin. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CategoriesBusinessLogic {
    func requestDataSource(request: Categories.DataSource.Request)
}

protocol CategoriesDataStore {
    func getCategory(index: Int) -> NativeCategory
}

class CategoriesInteractor: CategoriesBusinessLogic, CategoriesDataStore
{
    var presenter: CategoriesPresentationLogic?
    var storeWorker = CategoryWorker(store: CategoryRealmStore())
    var categories = [NativeCategory]()
    var worker = CategoriesWorker()
    
    func requestDataSource(request: Categories.DataSource.Request) {
        storeWorker.fetchAll { (categories) in
            if categories.isEmpty {
                self.worker.insertInitialCategories(storeWorker: self.storeWorker) {
                    self.requestDataSource(request: Categories.DataSource.Request())
                }
            } else {
                self.categories = categories
                presenter?.presentDataSource(response: Categories.DataSource.Response(categories: categories))
            }
        }
    }
    
    func getCategory(index: Int) -> NativeCategory {
        return self.categories[index]
    }
}
